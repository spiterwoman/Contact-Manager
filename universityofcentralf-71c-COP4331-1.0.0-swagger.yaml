swagger: '2.0'
info:
  description: This is the API documentation for the COP 4331 Contact Manager
  version: 1.0.0
  title: Contact Manager
  # put the contact info for your development or API team
  contact:
    # Project Manager
    email: asandro0805@gmail.com
    
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

paths:
  /Login.php:
    post:
      tags:
      - Users
      summary: Logs into Contact Manager
      operationId: doLogin
      description: Logs into Contact Manager
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: loginItem
        description: Login
        schema:
          $ref: '#/definitions/Login'
      responses:
        200:
          description: OK
        404: 
          description: URL Not Found 
        500: 
          description: Server Error
  /Register.php:
    post:
      tags:
      - Users
      summary: Register User to Contact Manager
      operationId: doRegister
      description: Register User into Contact Manager
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: registerItem
        description: Register
        schema:
          $ref: '#/definitions/Register'
      responses:
        200:
          description: OK
        404:
          description: URL Not Found
        500:
          description: Server Error 
  /CreateContact.php:
    post:
      tags:
      - Add
      summary: Add Contact to Contact Manager
      operationId: addContact
      description: Add Contact into Contact Manager database
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: addItem
        description: Add Contact
        schema:
          $ref: '#/definitions/Add'
      responses:
        200:
          description: OK
        404:
          description: URL Not Found
        500:
          description: Server Error 
  /SearchContacts.php:
    post:
      tags:
      - Search
      summary: Search Contact
      operationId: searchContact
      description: Searches contact from Contact Manager database
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: searchItem
        description: Search Contact
        schema:
          $ref: '#/definitions/Search'
      responses:
        200:
          description: OK
        404:
          description: URL Not Found
        500:
          description: Server Error
  /UpdateContact.php:
    post:
      tags:
      - Update
      summary: Update Contact
      operationId: updateContact
      description: Updates contact in Contact Manager database
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: updateItem
        description: Update Contact
        schema:
          $ref: '#/definitions/Update'
      responses:
        200:
          description: OK
        404:
          description: URL Not Found
        500:
          description: Server Error
  /DeleteContact.php:
    post:
      tags:
      - Delete
      summary: Delete contact from Contact Manager
      operationId: deleteContact
      description: Delete contact from Contact Manager database
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: deleteItem
        description: Delete Contact
        schema:
          $ref: '#/definitions/Delete'
      responses:
        200:
          description: OK
        404:
          description: URL Not Found
        500:
          description: Server Error
  /UpdatePassword.php:
definitions:
  Login:
    type: object
    required: 
    - login
    - password
    properties:
      login:
        type: string
        example: "user"
      password: 
        type: string
        example: "password"
  Register:
    type: object
    required:
    - firstName
    - lastName 
    - login
    - password
    properties:
      firstName:
        type: string
        example: "bob"
      lastName:
        type: string
        example: "brown"
      login:
        type: string
        example: "user"
      password:
        type: string
        example: "password"
  Add:
    type: object
    required:
    - firstName
    - lastName 
    - phoneNumber
    - email
    - userId
    properties: 
      firstName:
        type: string
        example: "bob"
      lastName:
        type: string
        example: "brown"
      phoneNumber:
        type: integer
        example: 0123456789
      email:
        type: string
        example: "user@yahoo.com"
      userId:
        type: integer
        example: 1
  Search:
    type: object
    required: 
    - firstName
    - userId
    properties:
      firstName:
        type: string
        example: "bob"
      userId: 
        type: integer
        example: 1
  Update:
    type: object
    required: 
    - firstName
    - lastName
    - phoneNumber
    - email
    - userId
    properties: 
      firstName:
        type: string
        example: "bob"
      lastName:
        type: string
        example: "brown"
      phoneNumber:
        type: integer
        example: 0123456789
      email:
        type: string
        example: "user@yahoo.com"
      userId:
        type: integer
        example: 1
  Delete:
    type: object
    required: 
    - userId
    - Id
    properties:
      userId: 
        type: integer
        example: 1
      Id: 
        type: integer
        example: 14
host: 134.199.204.183
basePath: /LAMPAPI
schemes:
- http